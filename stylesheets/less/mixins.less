@base-font-size-px: 16; // root's font size. @base-font-size-px MUST ME AN INTEGER.

@pxtorem-js-function: ~`pxtorem = function(px){ if (typeof rmxsBaseFontSize == 'undefined')  rmxsBaseFontSize = @{base-font-size-px}; return (parseInt(px.replace(/(^\d+)(.+$)/i,'$1')) / rmxsBaseFontSize + 'rem') }`;


// ===== FONT MIXINS =====
.font-size(@value) {
    font-size: @value;
}

.font-size(@value) when (ispixel(@value)) {
    @rem-value: ~`pxtorem('@{value}')`;
    font-size: @rem-value;
}

.line-height(@value) {
    line-height: @value;
}

.line-height(@value) when (ispixel(@value)) {
    @rem-value: ~`pxtorem('@{value}')`;
    line-height: @rem-value;
}

.text-indent(@value) {
    text-indent: @value;
}

.text-indent(@value) when (ispixel(@value)) {
    @rem-value: ~`pxtorem('@{value}')`;
    text-indent: @rem-value;
}


// ===== MARGIN MIXINS =====
.margin(@value) {
    margin: @value;
}

.margin(@vvalue, @hvalue) {
    margin: @arguments;
}

.margin(@value) when (ispixel(@value)) {
    @rem-value: ~`pxtorem('@{value}')`;
    margin: @rem-value;
}

.margin(@vertical, @horizontal) when (ispixel(@vertical)) and (ispixel(@horizontal)) {
    @rem-vvalue: ~`pxtorem('@{vertical}')`;
    @rem-hvalue: ~`pxtorem('@{horizontal}')`;
    margin: @rem-vvalue @rem-hvalue;
}

.margin(@vertical, @horizontal) when (ispixel(@vertical)) {
    @rem-value: ~`pxtorem('@{vertical}')`;
    .margin(@rem-value, @horizontal);
}

.margin(@vertical, @horizontal) when (ispixel(@horizontal)) {
    @rem-value: ~`pxtorem('@{horizontal}')`;
    .margin(@vertical, @rem-value);
}

.margin-top(@value) {
    margin-top: @value;
}

.margin-top(@value) when (ispixel(@value)) {
    @rem-value: ~`pxtorem('@{value}')`;
    margin-top: @rem-value;
}

.margin-right(@value) {
    margin-right: @value;
}

.margin-right(@value) when (ispixel(@value)) {
    @rem-value: ~`pxtorem('@{value}')`;
    margin-right: @rem-value;
}

.margin-bottom(@value) {
    margin-bottom: @value;
}

.margin-bottom(@value) when (ispixel(@value)) {
    @rem-value: ~`pxtorem('@{value}')`;
    margin-bottom: @rem-value;
}

.margin-left(@value) {
    margin-left: @value;
}

.margin-left(@value) when (ispixel(@value)) {
    @rem-value: ~`pxtorem('@{value}')`;
    margin-left: @rem-value;
}


// ===== PADDING MIXINS =====
.padding(@value) {
    padding: @value;
}

.padding(@vvalue, @hvalue) {
    padding: @arguments;
}

.padding(@value) when (ispixel(@value)) {
    @rem-value: ~`pxtorem('@{value}')`;
    padding: @rem-value;
}

.padding(@vertical, @horizontal) when (ispixel(@vertical)) and (ispixel(@horizontal)) {
    @rem-vvalue: ~`pxtorem('@{vertical}')`;
    @rem-hvalue: ~`pxtorem('@{horizontal}')`;
    padding: @rem-vvalue @rem-hvalue;
}

.padding(@vertical, @horizontal) when (ispixel(@vertical)) {
    @rem-value: ~`pxtorem('@{vertical}')`;
    .padding(@rem-value, @horizontal);
}

.padding(@vertical, @horizontal) when (ispixel(@horizontal)) {
    @rem-value: ~`pxtorem('@{horizontal}')`;
    .padding(@vertical, @rem-value);
}

.padding-top(@value) {
    padding-top: @value;
}

.padding-top(@value) when (ispixel(@value)) {
    @rem-value: ~`pxtorem('@{value}')`;
    padding-top: @rem-value;
}

.padding-right(@value) {
    padding-right: @value;
}

.padding-right(@value) when (ispixel(@value)) {
    @rem-value: ~`pxtorem('@{value}')`;
    padding-right: @rem-value;
}

.padding-bottom(@value) {
    padding-bottom: @value;
}

.padding-bottom(@value) when (ispixel(@value)) {
    @rem-value: ~`pxtorem('@{value}')`;
    padding-bottom: @rem-value;
}

.padding-left(@value) {
    padding-left: @value;
}

.padding-left(@value) when (ispixel(@value)) {
    @rem-value: ~`pxtorem('@{value}')`;
    padding-left: @rem-value;
}


// ===== POSITION MIXINS =====
.height(@value) {
    height: @value;
}

.height(@value) when (ispixel(@value)) {
    @rem-value: ~`pxtorem('@{value}')`;
    height: @rem-value;
}

.min-height(@value) {
    min-height: @value;
}

.min-height(@value) when (ispixel(@value)) {
    @rem-value: ~`pxtorem('@{value}')`;
    min-height: @rem-value;
}

.max-height(@value) {
    max-height: @value;
}

.max-height(@value) when (ispixel(@value)) {
    @rem-value: ~`pxtorem('@{value}')`;
    max-height: @rem-value;
}


.width(@value) {
    width: @value;
}

.width(@value) when (ispixel(@value)) {
    @rem-value: ~`pxtorem('@{value}')`;
    width: @rem-value;
}

.min-width(@value) {
    min-width: @value;
}

.min-width(@value) when (ispixel(@value)) {
    @rem-value: ~`pxtorem('@{value}')`;
    min-width: @rem-value;
}

.max-width(@value) {
    max-width: @value;
}

.max-width(@value) when (ispixel(@value)) {
    @rem-value: ~`pxtorem('@{value}')`;
    max-width: @rem-value;
}

.top(@value) {
    top: @value;
}

.top(@value) when (ispixel(@value)) {
    @rem-value: ~`pxtorem('@{value}')`;
    top: @rem-value;
}

.left(@value) {
    left: @value;
}

.left(@value) when (ispixel(@value)) {
    @rem-value: ~`pxtorem('@{value}')`;
    left: @rem-value;
}

.right(@value) {
    right: @value;
}

.right(@value) when (ispixel(@value)) {
    @rem-value: ~`pxtorem('@{value}')`;
    right: @rem-value;
}

.bottom(@value) {
    bottom: @value;
}

.bottom(@value) when (ispixel(@value)) {
    @rem-value: ~`pxtorem('@{value}')`;
    bottom: @rem-value;
}


/*
.rem-mixins-test-class {
    .font-size(10px);
    .line-height(20px);
    .margin(10px);
    .margin(3em);
    .margin(10px, 20px);
    .margin(10px, 20%);
    .margin(0px , 20px);
    .margin-top(2%);
    .margin-top(2px);
    .padding(10px);
    .padding(3em);
    .padding(10px, 20px);
    .padding(10px, 20%);
    .padding(3em, 20px)
}
*/

// floats + justified
// ----------------------------	

.left-float			               { float: left; }	
.right-float		               { float: right; }	
.center-float		               { margin: 0 auto; }
                               
.border-bottom                 { border-bottom: 1px solid @clouds; padding-bottom: .5em; margin-bottom: 1em; }
                               
.text-left			               { text-align: left; }
.text-right			               { text-align: right; }
.text-center		               { text-align: center; }
.justified 			               { text-align: justify; }
                               
.neg-1px                       { letter-spacing: -1px; }	
                               

.font-size (@size) {
  font-size: 0px + @size;
  font-size: 0rem + @size / @base-font-size;
}


// Typefaces
// ----------------------------

@merriweather:			          'Merriweather', 'oswald', 'HelveticaNeue', 'Helvetica Neue', Helvetica, Arial, sans-serif;

@oswald:				              'oswald', 'Merriweather', 'HelveticaNeue', 'Helvetica Neue', Helvetica, Arial, sans-serif;

@armata:				              'Armata', 'Merriweather', 'oswald', 'HelveticaNeue', 'Helvetica Neue', Helvetica, Arial, sans-serif; 

@glegoo:				              'Glegoo', 'Merriweather', 'oswald', 'Armata', 'HelveticaNeue', 'Helvetica Neue', Helvetica, Arial, sans-serif;

@base-font-size: 							16px;

@base-font-size: 							16;
@baseline-px: 								16px;					  // 16px
					   
@base-font-size-xl: 					ceil(@baseline-px * 1.50); /* 24px */
@base-font-size-large:        ceil(@baseline-px * 1.25); /* 20px */
@base-font-size-small:        ceil(@baseline-px * 0.85); /* 14px */
@base-font-size-xs: 					ceil(@baseline-px * 0.75); /* 12px */
@base-line-height:  					1.7;


/* Colors */

//old
@white:                       #fff;
@light-white:			            rgba(255, 255, 255, .5);
@clouds:                      #ecf0f1;
@silver:                      #bdc3c7;
@concrete:                    #95a5a6;
@asbestos:                    #7f8c8d;


@light-sunflower:             #f4d03f;
@sunflower:                   #f1c40f;
@light-orange:                #f39c12;
@orange:              	      #f46801;
@carrot:             	        #e67e22;
@pumpkin:            	        #d35400;
@alizarin:           	        #e74c3c;
@pomegranate:			            #c0392b;


@turquoise:                   #1abc9c;
@greensea:                    #16a085;
@emerland:                    #2ecc71;
@nephritis:            	      #27ae60;
@peter-river:                 #3498db;
@belizehole:			            #2980b9;
@amethyst:				            #9b59b6;
@wisteria:				            #8e44ad;
@wet-asphalt:			            #34495e;
@midnight-blue:			          #2c3350;


@new-blue:                    #60b7e1;
@new-green:                   #009e73;
@new-teal:                    #009E91;
@new-yellow:                  #FFBF00;
// colors

//========================================================================================
//
//	COLORS
//
//========================================================================================
//New

@base-color: 								  #000;
@base-color-222:            	lighten(@base-color, 13.5%); 	// #222
@base-color-333:              lighten(@base-color, 20%);   	// #333
@base-color-555:              lighten(@base-color, 33.5%); 	// #555
@base-color-999:             	lighten(@base-color, 60%);   	// #999
@base-color-aaa: 							lighten(@base-color, 66.5%);  	// #aaa
@base-color-ccc: 							lighten(@base-color, 80%); 		// #ccc
@base-color-eee:           		lighten(@base-color, 93.5%); 	// #eee

@off-white: 								  #f4f4f4;
@white: 									    #fff;



@secondary-color: 						#3498db;


@text-color: 								  @base-color-555;
@link-color: 								  @secondary-color;
                              
                              
@btn-orange: 								  #f46801;


@primary-color: 							@secondary-color;
@danger-color: 								#e74c3c;
@info-color: 								  #1abc9c;
@warning-color: 							#f39c12;
@success-color: 							#2ecc71;


//========================================================================================
//
//	Media Query Breakpoints
//
//========================================================================================

@bp-desktop: 		~"(min-width: 1200px)";
@bp-tablet: 		~"(min-width: 768px) and (max-width: 979px)";
@bp-mobile: 		~"(max-width: 767px)";

@media @bp-desktop {
	.desktop-hidden {
		visibility: hidden;
		display: none;
	}
}

@media @bp-tablet {
	.tablet-hidden {
		visibility: hidden;
		display: none;
	}
}

@media @bp-mobile {
	.mobile-hidden {
		visibility: hidden;
		display: none;
	}
}

@media @bp-mobile {
	.show-mobile {
		visibility: visible;
		display: block;
		
	}
}

.show-mobile {
	display: none;
	visibility: hidden; 
	
	@media @bp-mobile {
		display: block;
		visibility: visible;
	}
}


//========================================================================================
//
//	Buttons
//
//========================================================================================

@btn-font-weight: 						normal;


// Default //
@btn-default-color: 					lighten(@base-color, 55%);
@btn-default-bg: 							darken(@white, 5%);
@btn-default-border: 					darken(@white, 10%);

// Primary //
@btn-primary-color: 					@white;
@btn-primary-bg: 							@secondary-color;
@btn-primary-border: 					darken(@secondary-color, 10%);

// Danger //
@btn-danger-color: 						@white;
@btn-danger-bg: 							@danger-color;
@btn-danger-border: 					darken(@danger-color, 5%);

// Info //
@btn-info-color: 							@white;
@btn-info-bg: 								@info-color;
@btn-info-border: 						darken(@info-color, 5%);

// Warning //
@btn-warning-color: 					@white;
@btn-warning-bg: 							@warning-color;
@btn-warning-border: 					darken(@warning-color, 5%);

// Success //
@btn-success-color: 					@white;
@btn-success-bg: 							@success-color;
@btn-success-border: 					darken(@success-color, 5%);


//       				Horizontal Rules          	              //
//===============================================================//

.hr_thin		{ border: 1px solid @clouds; }
.hr_medium		{ border: 3px solid @clouds; }
.hr_thick		{ border: 5px solid @clouds; }

.hr_thin_w		{ border: 1px solid @white; }
.hr_medium_w	{ border: 3px solid @white; }
.hr_thick_w	    { border: 5px solid @white; }


//       				Round Corners            	              //
//===============================================================//
			
.border-radius (@radius: 6px) {
  -webkit-border-radius: @radius;
  -moz-border-radius: @radius;
  -ms-border-radius: @radius;
  -o-border-radius: @radius;
  border-radius: @radius; }
  
.border-radius-top-radius(@radius) {
	border-radius-top-right-radius: @radius;
	border-radius-top-left-radius: @radius;
}

.border-radius-right-radius(@radius) {
	border-radius-bottom-right-radius: @radius;
	border-radius-bottom-right-radius: @radius;
}

.border-radius-bottom-radius(@radius) {
	border-radius-bottom-right-radius: @radius;
	border-radius-bottom-left-radius: @radius;
}

.border-radius-left-radius(@radius) {
	border-radius-bottom-left-radius: @radius;
	border-radius-bottom-left-radius: @radius;
}

//
// Make multpile box-shadows on any element
//

.box-shadow(@shadow1) {
    -webkit-box-shadow: @shadow1;
    -moz-box-shadow: @shadow1;
    box-shadow: @shadow1;
}

.box-shadow(@shadow1, @shadow2) {
    -webkit-box-shadow: @shadow1, @shadow2;
    -moz-box-shadow: @shadow1, @shadow2;
    box-shadow: @shadow1, @shadow2;
}    

.box-shadow(@shadow1, @shadow2, @shadow3) {
    -webkit-box-shadow: @shadow1, @shadow2, @shadow3;
    -moz-box-shadow: @shadow1, @shadow2, @shadow3;
    box-shadow: @shadow1, @shadow2, @shadow3;
}

.box-shadow(@shadow1, @shadow2, @shadow3, @shadow4) {
    -webkit-box-shadow: @shadow1, @shadow2, @shadow3, @shadow4;
    -moz-box-shadow: @shadow1, @shadow2, @shadow3, @shadow4;
    box-shadow: @shadow1, @shadow2, @shadow3, @shadow4;
}

.box-shadow(@shadow1, @shadow2, @shadow3, @shadow4, @shadow5) {
    -webkit-box-shadow: @shadow1, @shadow2, @shadow3, @shadow4, @shadow5;
    -moz-box-shadow: @shadow1, @shadow2, @shadow3, @shadow4, @shadow5;
    box-shadow: @shadow1, @shadow2, @shadow3, @shadow4, @shadow5;
}

.opacity(@opacity) {
  opacity: @opacity;
}


.transition(@transition) {
	-webkit-transition: @transition;
	-moz-transition: @transition;
	transition: @transition;
}

.rotate(@deg) {
	-webkit-transform: rotate(@deg);    
	-moz-transform: rotate(@deg);   
	-ms-transform: rotate(@deg);   
	 -o-transform: rotate(@deg);
	    transform: rotate(@deg);
}

.transform(@skew) {
	-webkit-transform: skew(@skew);
	-moz-transform: skew(@skew);
	-ms-transform: skew(@skew);
	-o-transform: skew(@skew);
	transform: skew(@skew);
}

.gradient(@color: #F5F5F5, @start: #EEE, @stop: #FFF) {
	  background: @color;
	  background: -webkit-gradient(linear,
	                               left bottom,
	                               left top,
	                               color-stop(0, @start),
	                               color-stop(1, @stop));
	  background: -ms-linear-gradient(bottom,
	                                  @start,
	                                  @stop);
	  background: -moz-linear-gradient(center bottom,
	                                   @start 0%,
	                                   @stop 100%);
	  background: -o-linear-gradient(@stop,
	                                 @start);
	  background-image: linear-gradient(top, @start, @stop);
	  
	  filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",@stop,@start));
}

//       				Buttons 	            	              //
//===============================================================//

.button-version (@color; @background; @border) {
	color: @color;
	background-color: @background;
	border-color: @border;
	.box-shadow(inset 0px 1px 0 rgba(255,255,255,.5));
	
	&:hover {
		background-color: darken(@background, 10%);
        border-color: darken(@border, 10%);
	}
	&:active,
	&.active {
		color: @color;
		background-color: darken(@background, 12.5%);
        border-color: darken(@border, 12.5%);
        .box-shadow(inset 0px 3px 6px rgba(0,0,0,.25));
        outline: 0;
	}
}